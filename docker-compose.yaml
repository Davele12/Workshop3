version: '3.8' # Versión de Docker Compose

services: # Contenedores a ejecutar
  zookeeper: # Primer contenedor (Servicio)
    image: confluentinc/cp-zookeeper:latest  # Imagen de Docker para Zookeeper
    container_name: zookeeper # Nombre del contenedor
    environment: # Variables de entorno
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: # Mapea el puerto 2181 del host al puerto 2181 dentro del contenedor de Zookeeper
      - 2181:2181

  kafka: # Segundo contenedor (Servicio)
    image: confluentinc/cp-kafka:latest # Imagen de Docker para Kafka
    container_name: kafka # Nombre del contenedor
    depends_on:
      - zookeeper # Kafka depende de Zookeeper, por lo que Kafka no se iniciará hasta que Zookeeper esté en funcionamiento
    environment:
      KAFKA_BROKER_ID: 1 # Identificador único para este broker de Kafka (establecido en 1 en este caso)
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # Información de conexión para Zookeeper, accesible en zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT # Define los protocolos de seguridad para los listeners de Kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092 # Define los endpoints anunciados para que los clientes se conecten al broker de Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092" # Puerto para usar para conectar desde el broker de Kafka al puerto localhost
    expose:
     - "29092" # Expone el puerto 29092 para la comunicación interna
